ggplot(dat) +
geom_bar(aes(x = fac_fdr)) +
coord_flip()
library(readxl)
library(dplyr)
library(stringr)
library(glue)
library(janitor)
library(ggplot2)
library(rio)
library(lubridate)
library(sf)
library(leaflet)
ggplot(dat) +
geom_bar(aes(x = entity_type_description)) +
coord_flip()
ggplot(dat) +
geom_bar(aes(x = fac_fdr)) +
coord_flip()
ggplot(dat) +
geom_bar(aes(x = entity_type_description)) +
coord_flip()
dat %>%
filter(county_name == "KINGS")
dat %>%
filter(county_name == "KINGS") %>%
summarise(num = nrow())
dat %>%
filter(county_name == "KINGS") %>%
summarise(num = nrow)
dat %>%
filter(county_name == "KINGS") %>%
summarise(avg_capacity = mean(capacity, na.rm = T))
dat %>%
filter(county_name == "KINGS") %>%
summarise(birthing_facs = sum(birthing_facility_flag))
dat %>%
filter(county_name == "KINGS") %>%
summarise(birthing_facs = sum(!is.na(birthing_facility_flag)))
dat %>%
filter(county_name == "KINGS") %>%
nrow()
dat %>%
filter(county_name == "KINGS") %>%
summarise(avg_capacity = mean(capacity, na.rm = T)) %>%
class()
dat %>%
filter(county_name == "KINGS") %>%
nrow() %>%
class()
library(tibble)
county_summary <- function(county) {
county_upper <- str_to_upper(county)
df <- dat %>% filter(county_name == county_upper)
tibble::tibble(
"County" = str_to_title(county),
"Facilities" = nrow(df),
"Avg Capacity" = mean(df$capacity, na.rm = T),
"Birthing Facilities" = sum(!is.na(df$birthing_facility_flag))
)
}
county_summary('kings')
county_summary(c('kings',
'fresno'))
lapply(c('kings', 'fresno'), county_summary)
lapply(c('kings', 'fresno'), county_summary) %>% unlist()
lapply(c('kings', 'fresno'), county_summary)
county_summary <- function(county) {
county_upper <- str_to_upper(county)
df <- dat %>% filter(county_name == county_upper)
tibble::tibble(
"County" = str_to_title(county),
"Facilities" = nrow(df),
"Avg Capacity" = round(mean(df$capacity, na.rm = T)),
"Birthing Facilities" = sum(!is.na(df$birthing_facility_flag))
)
}
lapply(c('kings', 'fresno'), county_summary)
library(DT)
DT(county_summary('kings'))
DT::datatable(county_summary('kings'))
dat %>%
group_by(county) %>%
mutate(avg_capacity = mean(capacit, na.rm = T))
dat %>%
group_by(county_name) %>%
mutate(avg_capacity = mean(capacity, na.rm = T))
rm(list = ls())
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
dat %>% filter(county_name == "KINGS")
dat <- read_excel("health_facility_locations.xlsx") %>%
clean_names()
dat %>% filter(county_name == "KINGS")
runApp()
?dataTableOutput
runApp()
colnames(dat)
runApp()
dat %>%
filter(county == "KINGS") %>%
ggplot() +
geom_bar(aes(x = entity_type_description)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
ggplot() +
geom_bar(aes(x = entity_type_description)) +
coord_flip()
library(forcats)
kings_dat <- dat %>%
filter(county_name == "KINGS")
kings_dat <- dat %>%
filter(county_name == "KINGS") %>%
select(fac_name, entity_type_description, capacity)
kings_dat <- dat %>%
filter(county_name == "KINGS") %>%
select(facname, entity_type_description, capacity)
str(kings_dat)
forcats::fct_infreq(kings_dat$facname)
str(kings_dat)
kings_dat <- kings_dat %>%
mutate(facname_factor = forcats::fct_infreq(facname))
str(kings_dat)
levels(kings_dat$facname)
levels(kings_dat$facname_factor)
table(kings_dat$facname_factor)
dat %>%
filter(county_name == "KINGS") %>%
mutate(entity_fac = forcats::fct_infreq(entity_type_description)) %>%
ggplot() +
geom_bar(aes(x = entity_type_description)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(entity_fac = forcats::fct_infreq(entity_type_description)) %>%
ggplot() +
geom_bar(aes(x = entity_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = forcats::fct_infreq(facname)) %>%
ggplot() +
geom_bar(aes(x = facility_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = forcats::fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = facility_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(facility_fac, -..count..))) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(facility_fac, -count))) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(facility_fac))) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(facility_fac, -..count..)), stat = "count") +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = forcats::fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = facility_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = forcats::fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = facility_fac))
dat %>%
filter(county_name == "KINGS") %>%
mutate(facility_fac = forcats::fct_infreq(facname) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = facility_fac)) +
coord_flip()
colnames(dat)
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(fac_fdr) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac)) +
coord_flip()
str(dat)
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(fac_fdr) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac, fill = licensed_certified)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(fac_fdr) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(fdr_fac, -count))) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac)) +
coord_flip() +
scale_x_discrete(limits = rev(levels(fdr_fac)))
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac)) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac))
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = fdr_fac)) +
scale_x_discrete(limits = rev(levels(fdr_fac)))
dat %>%
ggplot() +
geom_bar(aes(x = fac_fdr)) +
scale_x_discrete(limits = rev(levels(fac_fdr)))
dat %>%
ggplot() +
geom_bar(aes(x = factor(fac_fdr)))
dat %>%
ggplot() +
geom_bar(aes(x = factor(fac_fdr))) +
scale_x_discrete(limits = rev(levels(factor(fac_fdr))))
dat %>%
ggplot() +
geom_bar(aes(x = factor(fac_fdr))) +
scale_x_discrete()
?scale_x_discrete
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(fdr_fac, desc(fdr_fac)))) +
coord_flip()
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(fdr_fac, desc(fdr_fac)))) +
coord_flip() +
theme(axis.title.x = element_blank())
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(fdr_fac, desc(fdr_fac)))) +
coord_flip() +
theme(axis.title.y = element_blank())
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(str_to_title(fac_fdr)) %>% fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(fdr_fac, desc(fdr_fac)))) +
coord_flip() +
labs(x = "Number of Facilities") +
theme(axis.title.y = element_blank())
dat %>%
filter(county_name == "KINGS") %>%
mutate(fdr_fac = forcats::fct_infreq(
str_to_title(fac_fdr)
) %>%
fct_lump_n(5)) %>%
ggplot() +
geom_bar(aes(x = reorder(fdr_fac, desc(fdr_fac)))) +
coord_flip() +
labs(x = "Number of Facilities") +
theme(axis.title.y = element_blank())
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(county_sf)
county_sf <- st_read(dsn = "data", layer = "county_borders")
st_crs(county_sf) # 4326
View(county_sf)
county_sf %>% filter(name == str_to_title("LOS ANGELES"))
runApp()
runApp()
?clearShapes
?addPolygons
runApp()
?clearShapes
runApp()
runApp()
install.packages("bslib")
install.packages("bslib")
library(bslib)
bslib::bs_theme_preview()
library(bslib)
bslib::bs_theme_preview()
bslib::bs_theme_preview
install.packages("bsicons")
bslib::bs_theme_preview()
runApp()
?bs_theme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?addProviderTiles
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplotly
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
fontquiver::font_faces("sans")
fontquiver::font_faces()
fontquiver::font_faces(fontset = "sans")
runApp()
?DT::DTOutput
install.packages("thematic")
runApp()
runApp()
runApp()
?plotlyOutput
runApp()
?leafletOutput
?plotlyOutput
runApp()
runApp()
runApp()
?hr
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?leafletOutput
runApp()
?column
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?ggplot2::theme
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("reactable")
library(reactable)
runApp()
runApp()
colors()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?panel.background
??panel.background
?theme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat <- read_excel("health_facility_locations.xlsx") %>%
clean_names()
colnames(dat)
runApp()
runApp()
runApp()
runApp()
?addPolygons
runApp()
runApp()
runApp()
?tabPanel
runApp()
runApp()
runApp()
?rename
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?renderDataTable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinydashboard")
library(shinydashboard)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
